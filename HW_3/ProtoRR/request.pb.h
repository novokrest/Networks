// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef PROTOBUF_request_2eproto__INCLUDED
#define PROTOBUF_request_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace networks {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_request_2eproto();
void protobuf_AssignDesc_request_2eproto();
void protobuf_ShutdownFile_request_2eproto();

class Request;
class Response;

// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated int32 elements = 2;
  inline int elements_size() const;
  inline void clear_elements();
  static const int kElementsFieldNumber = 2;
  inline ::google::protobuf::int32 elements(int index) const;
  inline void set_elements(int index, ::google::protobuf::int32 value);
  inline void add_elements(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      elements() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:networks.Request)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > elements_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string worker = 2;
  inline bool has_worker() const;
  inline void clear_worker();
  static const int kWorkerFieldNumber = 2;
  inline const ::std::string& worker() const;
  inline void set_worker(const ::std::string& value);
  inline void set_worker(const char* value);
  inline void set_worker(const char* value, size_t size);
  inline ::std::string* mutable_worker();
  inline ::std::string* release_worker();
  inline void set_allocated_worker(::std::string* worker);

  // @@protoc_insertion_point(class_scope:networks.Response)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_worker();
  inline void clear_has_worker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* worker_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// required int32 count = 1;
inline bool Request::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Request::count() const {
  // @@protoc_insertion_point(field_get:networks.Request.count)
  return count_;
}
inline void Request::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:networks.Request.count)
}

// repeated int32 elements = 2;
inline int Request::elements_size() const {
  return elements_.size();
}
inline void Request::clear_elements() {
  elements_.Clear();
}
inline ::google::protobuf::int32 Request::elements(int index) const {
  // @@protoc_insertion_point(field_get:networks.Request.elements)
  return elements_.Get(index);
}
inline void Request::set_elements(int index, ::google::protobuf::int32 value) {
  elements_.Set(index, value);
  // @@protoc_insertion_point(field_set:networks.Request.elements)
}
inline void Request::add_elements(::google::protobuf::int32 value) {
  elements_.Add(value);
  // @@protoc_insertion_point(field_add:networks.Request.elements)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Request::elements() const {
  // @@protoc_insertion_point(field_list:networks.Request.elements)
  return elements_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Request::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:networks.Request.elements)
  return &elements_;
}

// -------------------------------------------------------------------

// Response

// required int32 result = 1;
inline bool Response::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Response::result() const {
  // @@protoc_insertion_point(field_get:networks.Response.result)
  return result_;
}
inline void Response::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:networks.Response.result)
}

// optional string worker = 2;
inline bool Response::has_worker() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_worker() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_worker() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_worker() {
  if (worker_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    worker_->clear();
  }
  clear_has_worker();
}
inline const ::std::string& Response::worker() const {
  // @@protoc_insertion_point(field_get:networks.Response.worker)
  return *worker_;
}
inline void Response::set_worker(const ::std::string& value) {
  set_has_worker();
  if (worker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    worker_ = new ::std::string;
  }
  worker_->assign(value);
  // @@protoc_insertion_point(field_set:networks.Response.worker)
}
inline void Response::set_worker(const char* value) {
  set_has_worker();
  if (worker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    worker_ = new ::std::string;
  }
  worker_->assign(value);
  // @@protoc_insertion_point(field_set_char:networks.Response.worker)
}
inline void Response::set_worker(const char* value, size_t size) {
  set_has_worker();
  if (worker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    worker_ = new ::std::string;
  }
  worker_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:networks.Response.worker)
}
inline ::std::string* Response::mutable_worker() {
  set_has_worker();
  if (worker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    worker_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:networks.Response.worker)
  return worker_;
}
inline ::std::string* Response::release_worker() {
  clear_has_worker();
  if (worker_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = worker_;
    worker_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_worker(::std::string* worker) {
  if (worker_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete worker_;
  }
  if (worker) {
    set_has_worker();
    worker_ = worker;
  } else {
    clear_has_worker();
    worker_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:networks.Response.worker)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace networks

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_2eproto__INCLUDED
